{"version":3,"sources":["components/Header.jsx","components/Homepage.jsx","AppRouter.js","App.js","index.js"],"names":["Header","_handleSignInClick","window","open","_handleLogoutClick","_this","props","handleNotAuthenticated","authenticated","this","react_default","a","createElement","className","react_router_dom","to","onClick","Component","HomePage","state","user","error","_handleNotAuthenticated","setState","_this2","fetch","method","credentials","headers","Accept","Content-Type","Access-Control-Allow-Credentials","then","response","status","json","Error","responseJson","catch","Header_Header","name","AppRouter","react_router","exact","path","component","App","AppRouter_AppRouter","ReactDOM","render","src_App","document","getElementById"],"mappings":"qNAIqBA,6MAqBnBC,mBAAqB,WAInBC,OAAOC,KAAK,0DAA2D,YAGzEC,mBAAqB,WAGnBF,OAAOC,KAAK,wDAAyD,SACrEE,EAAKC,MAAMC,kGA3BJ,IACCC,EAAkBC,KAAKH,MAAvBE,cACR,OACEE,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QACZH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,KAAT,SAEDP,EACCE,EAAAC,EAAAC,cAAA,MAAII,QAASP,KAAKL,oBAAlB,UAEAM,EAAAC,EAAAC,cAAA,MAAII,QAASP,KAAKR,oBAAlB,iBAf0BgB,aCAfC,6MAWnBC,MAAQ,CACNC,KAAM,GACNC,MAAO,KACPb,eAAe,KAsDjBc,wBAA0B,WACxBjB,EAAKkB,SAAS,CAAEf,eAAe,wFApDb,IAAAgB,EAAAf,KAElBgB,MAAM,iDAAkD,CACtDC,OAAQ,MACRC,YAAa,UACbC,QAAS,CACPC,OAAQ,mBACRC,eAAgB,mBAChBC,oCAAoC,KAGrCC,KAAK,SAAAC,GACJ,GAAwB,MAApBA,EAASC,OAAgB,OAAOD,EAASE,OAC7C,MAAM,IAAIC,MAAM,iCAEjBJ,KAAK,SAAAK,GACJb,EAAKD,SAAS,CACZf,eAAe,EACfY,KAAMiB,EAAajB,SAGtBkB,MAAM,SAAAjB,GACLG,EAAKD,SAAS,CACZf,eAAe,EACfa,MAAO,mEAKN,IACCb,EAAkBC,KAAKU,MAAvBX,cACR,OACEE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC2B,EAAD,CACE/B,cAAeA,EACfD,uBAAwBE,KAAKa,0BAE/BZ,EAAAC,EAAAC,cAAA,WACIJ,EAGAE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,2CACAF,EAAAC,EAAAC,cAAA,qBAAaH,KAAKU,MAAMC,KAAKoB,KAA7B,MAJF9B,EAAAC,EAAAC,cAAA,+BAxD0BK,qBCAzBwB,EAAY,WACvB,OACE/B,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW3B,OCC1B4B,mLAJX,OAAOpC,EAAAC,EAAAC,cAACmC,EAAD,aAFO9B,aCClB+B,IAASC,OAAOvC,EAAAC,EAAAC,cAACsC,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.a283bcfb.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { Component } from \"react\";\r\n\r\nexport default class Header extends Component {\r\n  static propTypes = {\r\n    authenticated: PropTypes.bool.isRequired\r\n  };\r\n\r\n  render() {\r\n    const { authenticated } = this.props;\r\n    return (\r\n      <ul className=\"menu\">\r\n        <li>\r\n          <Link to=\"/\">Home</Link>\r\n        </li>\r\n        {authenticated ? (\r\n          <li onClick={this._handleLogoutClick}>Logout</li>\r\n        ) : (\r\n          <li onClick={this._handleSignInClick}>Login</li>\r\n        )}\r\n      </ul>\r\n    );\r\n  }\r\n\r\n  _handleSignInClick = () => {\r\n    // Authenticate using via passport api in the backend\r\n    // Open Twitter login page\r\n    // Upon successful login, a cookie session will be stored in the client\r\n    window.open(\"https://mighty-refuge-73212.herokuapp.com/auth/facebook\", \"_self\");\r\n  };\r\n\r\n  _handleLogoutClick = () => {\r\n    // Logout using Twitter passport api\r\n    // Set authenticated state to false in the HomePage\r\n    window.open(\"https://mighty-refuge-73212.herokuapp.com/auth/logout\", \"_self\");\r\n    this.props.handleNotAuthenticated();\r\n  };\r\n}\r\n","import Header from \"./Header\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { Component } from \"react\";\r\n\r\nexport default class HomePage extends Component {\r\n  static propTypes = {\r\n    user: PropTypes.shape({\r\n      name: PropTypes.string,\r\n      profileImageUrl: PropTypes.string,\r\n      twitterId: PropTypes.string,\r\n      screenName: PropTypes.string,\r\n      _id: PropTypes.string\r\n    })\r\n  };\r\n\r\n  state = {\r\n    user: {},\r\n    error: null,\r\n    authenticated: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    // Fetch does not send cookies. So you should add credentials: 'include'\r\n    fetch(\"https://mighty-refuge-73212.herokuapp.com/auth\", {\r\n      method: \"GET\",\r\n      credentials: \"include\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        \"Access-Control-Allow-Credentials\": true\r\n      }\r\n    })\r\n      .then(response => {\r\n        if (response.status === 200) return response.json();\r\n        throw new Error(\"failed to authenticate user\");\r\n      })\r\n      .then(responseJson => {\r\n        this.setState({\r\n          authenticated: true,\r\n          user: responseJson.user\r\n        });\r\n      })\r\n      .catch(error => {\r\n        this.setState({\r\n          authenticated: false,\r\n          error: \"Failed to authenticate user\"\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { authenticated } = this.state;\r\n    return (\r\n      <div>\r\n        <Header\r\n          authenticated={authenticated}\r\n          handleNotAuthenticated={this._handleNotAuthenticated}\r\n        />\r\n        <div>\r\n          {!authenticated ? (\r\n            <h1>Welcome!</h1>\r\n          ) : (\r\n            <div>\r\n              <h1>You have login succcessfully!</h1>\r\n              <h2>Welcome {this.state.user.name}!</h2>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  _handleNotAuthenticated = () => {\r\n    this.setState({ authenticated: false });\r\n  };\r\n}\r\n","import React from 'react';\r\nimport HomePage from './components/Homepage';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\n\r\nexport const AppRouter = () => {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Route exact path='/' component={HomePage} />\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { AppRouter } from \"./AppRouter\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return <AppRouter />;\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\n"],"sourceRoot":""}